To Do:
1. X More data from rap-songs
2. X Parts-of-speech parameters
3. X Validation sets for hyperparameters
4. X Run Linear Regression
5. X Run simple neural network
6. X Try deep learning
7.   Restructure data for RNN
8.   Run a simple LSTM
9.   Create ensemble NN
(Artificial Deadline: 8pm)
10.  Try to extrapolate some powerful features back to real world
11.  Write up for poster with cool examples

Poster:
- Images: RNN example, song lyrics with highlights, MF Doom and Lil Pump in Header
- Motivation: MF DOOM, mumble rap, Gucci Gang vs Kendrick
- Infrastructure: Keras + Data pipeline
- Approach: initial linear regression, ann, rnn
- Results: shitty initial results

RESULTS:
- Init: abysmal, 579 dimension vs 1300 samples
- More data, without popular words
- Linear Regression: MSE, MAE: [3.0843481947260663, 0.44543924916379807]
- Even more data, parts of speech
- Initial results looking really good, due to data clean up and POS features

### THIS IS FAKE NEWS ######################################

LINEAR REGRESSION, NO REGULARIZATION
- 600, 160: Train: loss: 0.0767 - mean_absolute_error: 0.2338
            Test:  [0.16130966013524589, 0.35934767824847524]

LINEAR REGRESSION WITH REGULARIZATION, FIXED @ 500, 160
SINGLE-LAYER NEURAL NETWORK
NEURAL NETWORK, TESTING FOR OPTIMAL HIDDEN NODES
DEEP NEURAL NETWORK
RECURRENT

#######################################################################################

INTRODUCTION
With the recent surge in popularity of artists such as Lil Pump, Desiigner, and Lil Yachty, many "hip hop heads" have found themselves confused. Hip-hop has historically focused on spitting bars, with artist such as Eminem, Kendrick Lamar, and A Tribe Called Quest reigning as the greatest lyricists of all time. Nevertheless, as of late the songs most played according to Billboards charts and Spotify rankings show very little lyrical prowess, just look at the lyrics of "Gucci Gang", the current #3 song on the Hot 100 Billboard. In an attempt to understand this transition, I used ANN and RNN to predict commercial success of tracks based on their lyrics.

APPROACH
The task being tackled is predicting the popularity of hip-hop songs based on their lyrics, using Billboard charts as a heuristic for commerical success. Lyrical features of songs in the three major categories of semantics, structure, and vocabulary were extracted. The ideal end model that will be used is an ensemble of a recurrent neural-network (RNN) with a traditional neural network (ANN).
Ideally, the ANN would take into consideration features related to the totality of a song, such as lexical richness and song structure, while the RNN would be able to extrapolate on the sequentiality of lyrics, e.g. repeated catch lines.

For the initial tests, a simple Linear Regression was used as a baseline for the more complex approaches. Then, sucessive layers were added to the model to test for correlations between features. For the ANN and DNN, tests were run on different combinations of hyperparameters and regularizations to minimize both the mean squared error and the mean absolute error. Then, an RNN was trained on the sequential data. Finally, an ensemble composing the best ANN and RNN was used.

[Image of Neural Network, with example of features]
[Image of RNN, with example of sequence features]
[Image explaining composition of ensemble]

FEATURE EXTRACTION
The key to the success of the predictor is consequently making the features as expressive as possible. 
[List of features, exemplified by Gucci Gang and m.A.A.d City]

The following graphs highlight the distribution of some of these features among the data points.
[ Graphs with Score X Feature value, for train vs test ]

Scores:
- To make the score proportional to the peak score and the time of charts, we have (101-peakPos)^2/10000 which maps a peak score of 1 to 1 and a peak score of 100 to nearly zero. That is multiplied by the # of weeks on the chart. Finally, to make the data set horizontal, I used the percentiles of each score rather than the actual score to compare relative rank.
[Graph comparing percentile vs Actual Score]

ANN Features:
Semantics:
- Percentage of affect categories according to Emolex
- Percentage of parts of speech according to NLTK universal tagset
Structure:
- Percentage of verse types: Chorus, Verse
- Number of stanzas
- Avg number of lines per stanza
- Number of lines
- Average number of words per line
Vocabulary:
- Total word count
- Total distinct words, distinct words per line
- Lexical Richness: distinct / total
- Vocabualry Salience via tf_idf
- !, ?, and Digit counts
- Proportion of uncommon words or sounds, e.g. Ooou
- Proportion usage of i, we, us, love, bitch, fuck, money, rap

RNN Features:
Per line:
Semantics:
- Percentage of affect categories according to Emolex
- Percentage of parts of speech according to NLTK universal tagset
Vocabulary:
- Total word count
- Total distinct words, distinct words per line
- Lexical Richness: distinct / total
- Vocabualry Salience via tf_idf
- !, ?, and Digit counts
- Proportion of uncommon words or sounds, e.g. Ooou

DATA PIPELINE AND INFRASTRUCTURE
The songs to be analyzed with their respective peak rank and time on the charts were pulled from the Rap and RnB/Hip Hop Billboard charts using an unofficial API. Then, using the Genius search api and webscraping, the lyrics of each song was obtained. This raw dataset was stored in a in-memory Sqlite database. Then, features were extracted for each song.
This gave a total of 4491 songs from 1995 onwards, split into train, validate and test sets. 
Test = 2015 onwards
Train = 0.8, Validate = 0.2

Create features for each, transform into sparse matrix.
For recurrent training, sequences of fixed length must be built. I considered the first 200 lines, and padded those who didn't reach.

From there Keras with a TensorFlow backend was used to implement and train the models.

RESULTS AND ANALYSIS
- Init: abysmal, 579 dimension vs 1300 samples
- More data 1995, without popular words to reduce max dimensionality
- Messed up feature extraction smh

REFERENCES AND ACKNOWLEDGEMENTS
Lyrics: Genius API docs.genius.com
Billboard: extra-official API github.com/guoguo12/billboard-charts
Feature Inspiration: https://publik.tuwien.ac.at/files/PubDat_166272.pdf
Hidden Layer Heuristics: https://stats.stackexchange.com/questions/181/how-to-choose-the-number- of-hidden-layers-and-nodes-in-a-feedforward-neural-netw
Semantics: NRC Word-Emotion Lexicon (EmoLex) will be used to associated the lyrics to emotions.
EmoLex: arxiv.org/pdf/1308.6297.pdf

